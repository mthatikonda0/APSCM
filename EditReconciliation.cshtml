@model AGE.CMS.Data.Models.Case.viewReconciliation

@{
    ViewBag.Title = "Reconciliation";
    var errorclass = "";
}

<script src="~/Assets/Basic/Scripts/CMS/Case/EditReconciliation.js"></script>

<div class="container">
    <div class="panel panel-warning">

        <div class="panel-heading">
            <h2 class="panel-title">
                <span class="titletextbegin">
                    <span class="glyphicon glyphicon-edit"></span><span class="textspace">
                        <text>Reconciliation</text>
                    </span>
                </span>
            </h2>
        </div>

        <div class="panel-body">
            @if (Model.InCompleteErrors.ErrorsinReconciliation && Model.InCompleteErrors.HasErrorsDateFTF)
            {
                <span class="danger">Please enter Status Date</span><br />
            }

            @if (Model.InCompleteErrors.ErrorsinReconciliation && Model.InCompleteErrors.HasErrorsIsDateBill)
            {
                <span class="danger">Please enter Bill Date</span><br />
            }

            @if (Model.InCompleteErrors.ErrorsinReconciliation && Model.InCompleteErrors.HasErrorsNeedForReconciliation)
            {
                <span class="danger">Please explain need for Reconciliation</span><br />
            }

            @if (Model.InCompleteErrors.ErrorsinReconciliation && Model.InCompleteErrors.HasErrorsVoucher)
            {
                <span class="danger">Please select atleast one voucher</span><br />
            }

            @if (Model.InCompleteErrors.ErrorsinReconciliation && Model.InCompleteErrors.HasErrorsVoucherAmount)
            {
                <span class="danger">Please enter voucher amount</span><br />
            }

            @if (Model.InCompleteErrors.ErrorsinReconciliation && Model.InCompleteErrors.HasErrorsSupervisorSignature)
            {
                <span class="danger">Supervisor - Please sign</span><br />
            }
            @if (Model.InCompleteErrors.ErrorsinReconciliation && Model.InCompleteErrors.HasErrorsSupervisorSignatureDate)
            {
                <span class="danger">Supervisor - Pleass enter date</span><br />
            }
            @{
                errorclass = "";

                if (Model.InCompleteErrors.HasErrorsDateFTF)
                {
                    errorclass = "has-error";
                }
                if (Model.InCompleteErrors.HasErrorsIsDateBill)
                {
                    errorclass = "has-error";
                }
                if (Model.InCompleteErrors.HasErrorsNeedForReconciliation)
                {
                    errorclass = "has-error";
                }
                if (Model.InCompleteErrors.HasErrorsVoucher)
                {
                    errorclass = "has-error";
                }
                if (Model.InCompleteErrors.HasErrorsVoucherAmount)
                {
                    errorclass = "has-error";
                }
                if (Model.InCompleteErrors.HasErrorsSupervisorSignature)
                {
                    errorclass = "has-error";
                }
                if (Model.InCompleteErrors.HasErrorsSupervisorSignatureDate)
                {
                    errorclass = "has-error";
                }
            }
            @using (Html.BeginForm("SaveReconciliation", "Case", FormMethod.Post))
            {
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.CaseheaderId)


                <div class="row">
                    <div class="col-lg-12 pull-right">
                        <div class="btn-group pull-right" style="margin-right: 10px;">
                            <button id="saveReconciliation" rel="tooltip" type="submit" class="btn btn-success btn-md" title=" Save ">Save</button>
                            <a id="cancelReconciliation" rel="tooltip" class="btn btn-default btn-md" title=" Cancel ">Cancel</a>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row nextline" style="margin:1px">
                    @Html.Partial("_ViewClientCMS", Model.viewCaseHeader.Client)
                </div>
                <div class="well">
                    <div class="well container" id="Reconciliation" style="background-color:#fff">
                        <div class="row">                           
                            <div class="col-lg-2 form-group" >
                                @Html.LabelFor(model => model.DateIntake, new { @class = "control-label" })
                                @*@Html.DisplayFor(model => model.DateIntake, new { @class = "form-control" })*@
                                @Html.DropDownListFor(model => model.DateIntake, (List<SelectListItem>)ViewBag.IntakeDates, "Select Intake Date", new { @class = "form-control" })
                            </div>
                            <div class="col-lg-3 form-group">
                                @Html.LabelFor(model => model.DateFirstFTF, new { @class = "control-label" })
                                @*@Html.EditorFor(model => model.DateFirstFTF)*@
                                @Html.TextBoxFor(m => m.DateFirstFTF, new { @class = "form-control datepicker", placeholder = "Final FTF Date" })
                            </div>
                            <div class="col-lg-3 form-group">
                                @Html.LabelFor(model => model.DateBill, new { @class = "control-label" })
                                @*@Html.EditorFor(model => model.DateBill)*@
                                @Html.TextBoxFor(m => m.DateBill, new { @class = "form-control datepicker", placeholder = "Bill Date" })
                            </div>
                        </div>
                        <div class="row nextline">
                            <div class="col-lg-3">
                                @Html.LabelFor(model => model.ReconciliationVouchers)<br />
                                @for (int idx = 0; idx < Model.ReconciliationVouchers.Count; idx++)
                                {
                                    @Html.HiddenFor(x => Model.ReconciliationVouchers[idx].Id)
                                    @Html.HiddenFor(x => Model.ReconciliationVouchers[idx].Code)
                                    @Html.CheckBoxFor(x => Model.ReconciliationVouchers[idx].IsChecked, new { @class = "" })  <span><textspace></textspace></span>@Html.DisplayFor(x => Model.ReconciliationVouchers[idx].Description)
                                    @Html.HiddenFor(x => Model.ReconciliationVouchers[idx].Description)

                                    <div id="voucheramount_@(idx)" class="form-group">
                                        @Html.LabelFor(model => model.ReconciliationVouchers[idx].VoucherAmount)
                                        @Html.TextBoxFor(model => model.ReconciliationVouchers[idx].VoucherAmount, new { @class = "form-control", placeholder = "Enter Amount" })
                                    </div>

                                    <br />
                                }
                            </div>
                        </div>
                        <br />
                        <div class="row next-line">
                            <div class="col-lg-6 form-group">
                                @Html.LabelFor(model => model.NeedForReconciliation)
                                <div>
                                    @Html.TextAreaFor(model => model.NeedForReconciliation, new { @class = "form-control ExplainReconciliation" })
                                </div>
                            </div>
                        </div>

                        <div class="row nextline">
                            <div class="col-lg-3 @errorclass">
                                @Html.LabelFor(model => model.SupervisorSignature)
                                <div>
                                    @Html.TextBoxFor(model => model.SupervisorSignature, new { @class = "form-control", @placeholder = "Sign" })
                                </div>
                            </div>
                            <div class="col-lg-3 @errorclass">
                                @Html.LabelFor(model => model.SupervisorSignatureDate)
                                <div>
                                    @Html.TextBoxFor(model => model.SupervisorSignatureDate, new { @class = "form-control datepicker", @placeholder = "Date" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>

    </div>
</div>
