@model AGE.CMS.Data.Models.Intake.viewClientCMS

@{
    ViewBag.Title = "Edit Client";
}

<script>
    $(document).ready(function(){
        //$("#cancelClient").click(function () {
        //    //window.location.href = window.location.href = $("#hiddenRootUrl").val() + '/' + $("#hiddenApplication").val() + '/' + $("#hiddenInstance").val() + '/CaseIntake/ListClientIntake/' + $("#ClientId").val();
        //    window.history.back();
        //});

        $('#Person_DOB').change(function () {
            var dob = $('#Person_DOB').val();
            dob = new Date(dob);
            var today = new Date();
            var age = Math.floor((today - dob) / (365.25 * 24 * 60 * 60 * 1000));
            $('#agecalculated').val(age);
        });

        $('.phonenumber').each(function () {
            $(this).attr("maxlength", "12");
            $(this).attr("pattern", "[1-9]{1}[0-9]{9}");
            $(this).val($(this).val().replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, '$1-$2-$3'));

        });

        $('form').submit(function () {
            var ssn = $('#Person_SSN').val();
            ssn = ssn.replace(/-/g, '');
            $('#Person_SSN').val(ssn);


            var phone = $('#Person_Phone_PhoneNumber').val();
            phone = phone.replace(/-/g, '');
            $('#Person_Phone_PhoneNumber').val(phone);

            var altphone = $('#Person_AlternatePhone_PhoneNumber').val();
            altphone = altphone.replace(/-/g, '');
            $('#Person_AlternatePhone_PhoneNumber').val(altphone);


            this.submit();
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('#print').on('click', function () {
            var template = $('#Clientdata').clone();
            template.find("#heading").show();
            template.find('.noprint').remove();
            Print(template);
        });

        function Print(template) {
            //alert(template.html());
            //var w = window.open();
            var w = window.open("", "popupWindow", "width=600, height=400, scrollbars=yes");
            var html = template.html();

            $(w.document.body).html(html);
            w.print();
        }
     $("#heading").hide();
   });
</script>
<div class="container">

    @using (Html.BeginForm("SaveClient", "Case", FormMethod.Post))
    {

        <div class="panel panel-warning">

            <div class="panel-heading">
                <h2 class="panel-title">
                    <span class="titletextbegin">
                        <span class="glyphicon glyphicon-edit"></span><span class="textspace">
                            <text>Client</text>
                        </span>
                    </span>
                </h2>
            </div>

            <div class="panel-body" id="Clientdata">
                <div class="row nextline" id="heading" style="border-bottom: 2px solid black">
                    <div class="pull-left" id="logoidoa" style="float:left">
                        <div id="imagelogo" align="center" style="float:left">
                            <svg version="1.0" xmlns="http://www.w3.org/2000/svg"
                                 width="185px" height="70px" viewBox="0 0 250.000000 99.000000"
                                 preserveAspectRatio="xMidYMid meet">

                                <g transform="translate(0.000000,99.000000) scale(0.100000,-0.100000)"
                                   fill="#000000" stroke="none">
                                    <path d="M310 903 c0 -7 5 -13 10 -13 6 0 10 -7 10 -15 0 -8 5 -15 10 -15 31
                                    0 -4 -58 -38 -63 -35 -5 -49 -24 -35 -46 10 -16 8 -24 -14 -47 -16 -18 -28
                                    -44 -31 -69 -4 -36 0 -47 29 -80 18 -21 33 -47 34 -59 0 -17 5 -20 28 -18 30
                                    3 34 -11 15 -53 -10 -23 -9 -29 14 -50 14 -13 28 -22 31 -19 9 9 27 -24 31
                                    -55 2 -18 8 -37 13 -42 6 -6 139 -9 344 -7 322 3 336 4 379 25 44 22 44 22 65
                                    3 39 -37 70 -41 256 -34 165 7 179 9 179 26 0 14 -8 18 -34 18 -19 0 -38 5
                                    -41 11 -4 5 7 45 24 87 l31 77 132 -2 132 -2 27 -68 c39 -95 38 -103 -11 -103
                                    -33 0 -40 -3 -40 -20 0 -19 7 -20 135 -20 128 0 135 1 135 20 0 14 -7 20 -22
                                    20 -13 0 -29 4 -36 9 -13 8 -163 345 -249 559 -20 49 -29 62 -47 62 -17 0 -27
                                    -14 -50 -67 -16 -38 -53 -123 -84 -191 l-55 -123 -13 36 c-24 71 -95 121 -183
                                    132 -43 5 -49 9 -60 39 -6 18 -37 55 -67 83 -91 83 -96 84 -556 86 -328 2
                                    -398 0 -398 -12z m113 -15 c3 -11 17 -18 43 -20 37 -3 39 -5 46 -43 7 -38 -2
                                    -207 -9 -175 -3 13 -24 14 -128 12 -69 -2 -125 -1 -125 2 0 3 9 20 20 38 13
                                    23 16 38 10 48 -15 23 -12 30 10 30 26 0 70 43 70 68 0 11 -7 25 -15 32 -26
                                    21 -17 30 29 28 32 -2 46 -8 49 -20z m310 -58 c5 -19 7 -145 5 -278 -6 -271
                                    -4 -264 -73 -260 l-40 3 -3 279 c-2 217 1 281 10 288 7 4 31 7 52 6 36 -3 41
                                    -6 49 -38z m327 20 c59 -11 112 -46 141 -94 37 -59 35 -72 -13 -124 -33 -35
                                    -48 -62 -58 -100 -12 -53 -7 -130 11 -164 7 -14 3 -20 -18 -31 -59 -31 -180
                                    -45 -252 -31 l-31 7 0 268 0 268 23 4 c43 8 145 7 197 -3z m753 -227 l45 -103
                                    -108 0 -108 0 50 113 c27 61 52 119 56 127 4 10 8 7 13 -10 4 -14 27 -71 52
                                    -127z m-376 2 c51 -58 68 -197 34 -272 -31 -67 -90 -89 -158 -56 -55 26 -61
                                    52 -25 102 41 56 64 131 66 206 l1 62 30 -8 c17 -5 40 -20 52 -34z m-202 -113
                                    c-4 -26 -10 -41 -12 -34 -3 7 -2 34 2 60 4 26 10 41 12 34 3 -7 2 -34 -2 -60z">


                                    </path>
                                </g>
                            </svg><br />
                        </div>
                    </div>

                    <h2 style="text-align: center"> Illinois Department on Aging APS</h2>

                    <h3 style="text-align: center"> Client </h3>
                </div>

                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.CaseheaderId)
                @Html.HiddenFor(model => model.PersonKey)


                <div class="row">
                    <div class="col-lg-12 pull-right">
                        <div class="btn-group pull-right" style="margin-right: 10px;">

                            <button id="saveClient" rel="tooltip" type="submit" class="btn btn-success btn-md btn-outline noprint" title=" Save & Close ">Save & Close</button>
                            <a type="button" class="btn btn-warning noprint" id="print" ><span class="glyphicon glyphicon-print"></span> Print</a>

                            @if (Model.mode == "Case")
                            {
                                <a id="cancelClient" rel="tooltip" class="btn btn-default btn-md noprint" title=" Cancel " href="@Url.Action("ListOfCasesInAgency", "Case")">Cancel</a>
                            }
                            @if (Model.mode == "ManageCase")
                            {
                                <a id="cancelClient" rel="tooltip" class="btn btn-default btn-md noprint" title=" Cancel " href="@Url.Action("ManageCase", "Case", new { CaseheaderId = Model.CaseheaderId })">Cancel</a>
                            }

                        </div>
                    </div>
                </div>

                <div class="row nextline">
                    <div class="col-lg-4">
                        @Html.ValidationMessageFor(m => m.Person.LastName)
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.LastName)</label>
                        <div>
                            @Html.TextBoxFor(m => m.Person.LastName, new { @class = "form-control", placeholder = "Last Name" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        @Html.ValidationMessageFor(m => m.Person.FirstName)
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.FirstName)</label>
                        <div>
                            @Html.TextBoxFor(m => m.Person.FirstName, new { @class = "form-control", placeholder = "First Name" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="row">
                            <div class="col-lg-4">
                                @Html.ValidationMessageFor(m => m.Person.MiddleName)
                                <label class="control-label muted">@Html.LabelFor(m => m.Person.MiddleName)</label>
                                <div>
                                    @Html.TextBoxFor(m => m.Person.MiddleName, new { @class = "form-control", placeholder = "Middle Initial" })
                                </div>
                            </div>
                            <div class="col-lg-4">
                                @*@Html.ValidationMessageFor(m => m.Person.SSN)*@
                                <label class="control-label muted">@Html.LabelFor(m => m.Person.SSN)</label>
                                <div>
                                    @Html.TextBoxFor(m => m.Person.SSN, new { @class = "form-control ssn ", placeholder = "SSN", @maxlength = "11" })
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="row nextline">
                    <div class="col-lg-4 form-group" id="addresserror">
                        @Html.ValidationMessageFor(m => m.Person.Address.AddressLine1)
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Address.AddressLine1)</label>
                        <div>
                            @Html.TextBoxFor(m => m.Person.Address.AddressLine1, new { @class = "form-control", placeholder = "Address Line 1" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Address.AddressLine2)</label>
                        <div>
                            @Html.TextBoxFor(m => m.Person.Address.AddressLine2, new { @class = "form-control", placeholder = "Address Line 2" })
                        </div>
                    </div>
                    <div class="col-lg-4 form-group" id="cityerror">
                        @* @Html.ValidationMessageFor(m => m.Person.City)*@
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Address.City)</label>
                        <div>
                            @Html.TextBoxFor(m => m.Person.Address.City, new { @class = "form-control", placeholder = "City" })
                        </div>
                    </div>
                </div>

                <div class="row nextline">
                    <div class="col-lg-4 form-group" id="stateerror">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Address.StateType)</label>
                        <div>
                            @Html.DropDownListFor(model => model.Person.Address.StateType.Id, new SelectList(new[] { new PersonProfile.Data.Entities.dtoStateType { Id = 0, Description = " Select State " } }.Union(Model.caselookup.listofstates.OrderBy(s => s.Description)), "Id", "Description", Model.Person.Address.StateType.Id), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-4 form-group" id="countyerror">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Address.CountyType.Id)</label>
                        <div>
                            @Html.DropDownListFor(model => model.Person.Address.CountyType.Id, new SelectList(new[] { new PersonProfile.Data.Entities.dtoCountyType { Id = 0, Description = " Select County " } }.Union(Model.caselookup.listofcounties.OrderBy(s => s.Description)), "Id", "Description", Model.Person.Address.CountyType.Id), new { @class = "form-control" })
                        </div>
                    </div>
                    @* @Html.HiddenFor(model => model.Person.Address.CountyType.Id) *@
                    <div class="col-lg-4">

                        <div class="row">
                            <div class="col-lg-6 form-group ziperror">
                                @Html.ValidationMessageFor(m => m.Person.Address.Zip5)
                                <label class="control-label muted">@Html.LabelFor(m => m.Person.Address.Zip5)</label>
                            </div>
                            <div class="col-lg-6">@Html.ValidationMessageFor(m => m.Person.Address.Zip4)</div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 ziperror">
                                @Html.TextBoxFor(m => m.Person.Address.Zip5, new { @class = "form-control", placeholder = "Zip 5", @maxlength = "5" })
                            </div>

                            <div class="col-lg-6">
                                @Html.TextBoxFor(m => m.Person.Address.Zip4, new { @class = "form-control", placeholder = "Zip + 4", @maxlength = "4" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-2 form-group" id="doberror">
                        @Html.ValidationMessageFor(m => m.Person.DOB)
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.DOB)</label>
                        <div>
                            @Html.TextBoxFor(model => model.Person.DOB, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker", placeholder = "DOB" })
                        </div>
                    </div>
                    <div class="col-lg-2 form-group" id="ageerror">
                        @Html.ValidationMessageFor(m => m.Age)
                        <label class="control-label muted">@Html.LabelFor(m => m.Age)</label>
                        <div>
                            @Html.TextBoxFor(model => model.Age, new { @class = "form-control", placeholder = "Age" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        @Html.ValidationMessageFor(m => m.Person.Phone)
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Phone)</label>
                        <div>
                            @Html.TextBoxFor(m => m.Person.Phone.PhoneNumber, new { @class = "form-control phonenumber", placeholder = "Phone", @maxlength = "12" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        @Html.ValidationMessageFor(m => m.Person.AlternatePhone)
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.AlternatePhone)</label>
                        <div>
                            @Html.TextBoxFor(m => m.Person.AlternatePhone.PhoneNumber, new { @class = "form-control phonenumber", placeholder = "Alternate Phone", @maxlength = "12" })
                        </div>
                    </div>
                </div>

                <div class="row nextline">
                    <div class="col-lg-4 form-group" id="gendererror">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Demographic.GenderType)</label>
                        <div>
                            @Html.DropDownListFor(model => model.Person.Demographic.GenderType.Id, new SelectList(new[] { new PersonProfile.Data.Entities.dtoGenderType { Id = 0, Description = " Select Gender " } }.Union(Model.caselookup.listofgender.OrderBy(s => s.Code)), "Id", "Description", Model.Person.Demographic.GenderType.Id), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-4 form-group" id="genderorientationerror">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Demographic.GenderOrientationType)</label>
                        <div>
                            @Html.DropDownListFor(model => model.Person.Demographic.GenderOrientationType.Id, new SelectList(new[] { new PersonProfile.Data.Entities.dtoGenderOrientationType { Id = 0, Description = " Select Sexual Orientation " } }.Union(Model.caselookup.ListOfGenderOrientationTypes.OrderBy(s => s.Code)), "Id", "Description", Model.Person.Demographic.GenderOrientationType.Id), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-4 form-group" id="raceerror">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Demographic.RaceType)</label>
                        <div>
                            @Html.DropDownListFor(model => model.Person.Demographic.RaceType.Id, new SelectList(new[] { new PersonProfile.Data.Entities.dtoRaceType { Id = 0, Description = " Select Race " } }.Union(Model.caselookup.listofraces.OrderBy(s => s.Code)), "Id", "Description", Model.Person.Demographic.RaceType.Id), new { @class = "form-control" })
                        </div>
                    </div>

                </div>

                <div class="row nextline">

                    <div class="col-lg-4 form-group" id="gend1ererror">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Demographic.EthnicityType)</label>
                        <div>
                            @Html.DropDownListFor(model => model.Person.Demographic.EthnicityType.Id, new SelectList(new[] { new PersonProfile.Data.Entities.dtoEthnicityType { Id = 0, Description = " Select Ethinicity " } }.Union(Model.caselookup.listofdtoethinicities.OrderBy(s => s.Code)), "Id", "Description", Model.Person.Demographic.EthnicityType.Id), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-4 form-group" id="maritalstatuserror">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Demographic.MaritalStatusType)</label>
                        <div>
                            @Html.DropDownListFor(model => model.Person.Demographic.MaritalStatusType.Id, new SelectList(new[] { new PersonProfile.Data.Entities.dtoMaritalStatusType { Id = 0, Description = " Select Marital Status " } }.Union(Model.caselookup.listofmaritalstatus.OrderBy(s => s.Code)), "Id", "Description", Model.Person.Demographic.MaritalStatusType.Id), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-4 form-group" id="maritalstatus1error">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Demographic.VeteransStatusType)</label>
                        <div>
                            @Html.DropDownListFor(model => model.Person.Demographic.VeteransStatusType.Id, new SelectList(new[] { new AGE.CMS.Data.Models.Intake.viewVeteranStatus { Id = 0, Description = " Select Veteran Status " } }.Union(Model.caselookup.listofveteranstatus.OrderBy(s => s.Code)), "Id", "Description", Model.Person.Demographic.VeteransStatusType.Id), new { @class = "form-control" })
                        </div>
                    </div>

                </div>

                <div class="row nextline">
                    <div class="col-lg-4 form-group" id="livingarrangementerror">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Demographic.LivingArrangementType)</label>
                        <div>
                            @Html.DropDownListFor(model => model.Person.Demographic.LivingArrangementType.Id, new SelectList(new[] { new PersonProfile.Data.Entities.dtoLivingArrangementType { Id = 0, Description = " Select Living Arrangement " } }.Union(Model.caselookup.listoflivingarrangements.OrderBy(s => s.Code)), "Id", "Description", Model.Person.Demographic.LivingArrangementType.Id), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-4 form-group" id="livingstatuserror">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Demographic.LivingStatusType)</label>
                        <div>
                            @Html.DropDownListFor(model => model.Person.Demographic.LivingStatusType.Id, new SelectList(new[] { new PersonProfile.Data.Entities.dtoLivingStatusType { Id = 0, Description = " Select Living Status " } }.Union(Model.caselookup.listoflivingstatus.OrderBy(s => s.Code)), "Id", "Description", Model.Person.Demographic.LivingStatusType.Id), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.RIN)</label>
                        <div>
                            @Html.TextBoxFor(m => m.Person.RIN, new { @class = "form-control", placeholder = "RIN", @maxlength = "9" })
                        </div>
                    </div>
                </div>

                <div class="row nextline">
                    <div class="col-lg-4">
                        @Html.ValidationMessageFor(m => m.Person.Email)
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Email)</label>
                        <div>
                            @Html.TextBoxFor(m => m.Person.Email, new { @class = "form-control", placeholder = "Email" })
                        </div>
                    </div>
                </div>

                <div class="row nextline">
                    <div class="col-lg-12">
                        @Html.ValidationMessageFor(m => m.Person.Address.Directions)
                        <label class="control-label muted">@Html.LabelFor(m => m.Person.Address.Directions)</label>
                        <div>
                            @Html.TextAreaFor(m => m.Person.Address.Directions, new { @class = "form-control", rows = "3" })
                        </div>
                    </div>
                </div>

                <div class="row nextline">
                    <div class="col-lg-12">
                        @Html.ValidationMessageFor(m => m.BestCommunicationMethod)
                        <label class="control-label muted">@Html.LabelFor(m => m.BestCommunicationMethod)</label>
                        <div>
                            @Html.TextAreaFor(m => m.BestCommunicationMethod, new { @class = "form-control", rows = "3" })
                        </div>
                    </div>
                </div>


            </div>
        </div>
    }
</div>
